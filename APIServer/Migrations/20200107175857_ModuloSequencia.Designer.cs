// <auto-generated />
using System;
using IdxSistemas.AppRepository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IdxSistemas.AppServer.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200107175857_ModuloSequencia")]
    partial class ModuloSequencia
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdxSistemas.Models.Agenda", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnName("BAI_ITE")
                        .HasMaxLength(15);

                    b.Property<string>("Cidade")
                        .HasColumnName("CID_ITE")
                        .HasMaxLength(15);

                    b.Property<string>("Email")
                        .HasColumnName("EMA_ITE")
                        .HasMaxLength(40);

                    b.Property<string>("Endereco")
                        .HasColumnName("END_ITE")
                        .HasMaxLength(40);

                    b.Property<string>("Nome")
                        .HasColumnName("NOM_ITE")
                        .HasMaxLength(40);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<string>("Telefone")
                        .HasColumnName("TEL_ITE")
                        .HasMaxLength(15);

                    b.HasKey("RowId");

                    b.ToTable("age_loj");
                });

            modelBuilder.Entity("IdxSistemas.Models.Aplicativo", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200);

                    b.Property<string>("Descricao");

                    b.Property<string>("Icone");

                    b.Property<string>("TargetURL")
                        .IsRequired();

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.HasKey("Codigo");

                    b.ToTable("Aplicativos");
                });

            modelBuilder.Entity("IdxSistemas.Models.Cancelada", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnName("DAT_LAN")
                        .HasColumnType("date");

                    b.Property<string>("Historico")
                        .HasColumnName("NOM_HIS")
                        .HasMaxLength(25);

                    b.Property<string>("Loja")
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("Numero")
                        .HasColumnName("NUM_DOC")
                        .HasMaxLength(6);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<string>("Status")
                        .HasColumnName("PEN_CAN")
                        .HasMaxLength(1);

                    b.HasKey("RowId");

                    b.HasIndex("Loja");

                    b.ToTable("cad_can");
                });

            modelBuilder.Entity("IdxSistemas.Models.Cep", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnName("BAI")
                        .HasMaxLength(18);

                    b.Property<string>("Cidade")
                        .HasColumnName("CID")
                        .HasMaxLength(20);

                    b.Property<string>("Estado")
                        .HasColumnName("EST")
                        .HasMaxLength(2);

                    b.Property<string>("NumeroCep")
                        .IsRequired()
                        .HasColumnName("CEP")
                        .HasMaxLength(8);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<string>("Rua")
                        .HasColumnName("RUA")
                        .HasMaxLength(55);

                    b.HasKey("RowId");

                    b.ToTable("cep_rua");
                });

            modelBuilder.Entity("IdxSistemas.Models.Cheque", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasColumnName("AGE_CHE")
                        .HasMaxLength(3);

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnName("BAN_CHE")
                        .HasMaxLength(3);

                    b.Property<string>("Cliente")
                        .HasColumnName("COD_CLI")
                        .HasMaxLength(5);

                    b.Property<string>("Conta")
                        .IsRequired()
                        .HasColumnName("CON_CHE")
                        .HasMaxLength(12);

                    b.Property<DateTime?>("Data")
                        .HasColumnName("DAT_LAN")
                        .HasColumnType("date");

                    b.Property<string>("Etapa")
                        .IsRequired()
                        .HasColumnName("NUM_ETP")
                        .HasMaxLength(1);

                    b.Property<string>("Loja")
                        .IsRequired()
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnName("NUM_CHE")
                        .HasMaxLength(7);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<double?>("Valor")
                        .HasColumnName("VAL_CHE");

                    b.Property<DateTime?>("Vencimento")
                        .HasColumnName("DAT_VEN")
                        .HasColumnType("date");

                    b.HasKey("RowId");

                    b.HasIndex("Cliente");

                    b.HasIndex("Loja");

                    b.ToTable("cad_che");
                });

            modelBuilder.Entity("IdxSistemas.Models.Cliente", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COD_CLI")
                        .HasMaxLength(5);

                    b.Property<string>("Bairro")
                        .HasColumnName("BAI_CLI")
                        .HasMaxLength(18);

                    b.Property<string>("CargoEmpresa")
                        .HasColumnName("CAR_EMP")
                        .HasMaxLength(15);

                    b.Property<string>("Carta1")
                        .HasColumnName("CAR_001")
                        .HasMaxLength(1);

                    b.Property<string>("Carta2")
                        .HasColumnName("CAR_002")
                        .HasMaxLength(2);

                    b.Property<string>("Cep")
                        .HasColumnName("CEP_CLI")
                        .HasMaxLength(8);

                    b.Property<string>("Cidade")
                        .HasColumnName("CID_CLI")
                        .HasMaxLength(20);

                    b.Property<string>("CidadeEmpresa")
                        .HasColumnName("CID_EMP")
                        .HasMaxLength(20);

                    b.Property<string>("Conceito")
                        .HasColumnName("CON_CEI")
                        .HasMaxLength(2);

                    b.Property<string>("Conjuge")
                        .HasColumnName("CNJ_CLI")
                        .HasMaxLength(40);

                    b.Property<string>("Cpf")
                        .HasColumnName("CIC_CLI")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnName("DAT_ALT");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnName("DAT_CAD");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnName("DAT_NAS");

                    b.Property<DateTime?>("DataUltimaCompra")
                        .HasColumnName("DAT_ULT");

                    b.Property<string>("Email")
                        .HasColumnName("EMA_CLI")
                        .HasMaxLength(35);

                    b.Property<string>("Empresa")
                        .HasColumnName("EMP_CLI")
                        .HasMaxLength(40);

                    b.Property<string>("Endereco")
                        .HasColumnName("END_CLI")
                        .HasMaxLength(40);

                    b.Property<string>("EnderecoEmpresa")
                        .HasColumnName("END_EMP")
                        .HasMaxLength(40);

                    b.Property<string>("Estado")
                        .HasColumnName("EST_CLI")
                        .HasMaxLength(2);

                    b.Property<string>("EstadoCivil")
                        .HasColumnName("EST_CIV")
                        .HasMaxLength(15);

                    b.Property<string>("Loja")
                        .IsRequired()
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("Nome")
                        .HasColumnName("NOM_CLI")
                        .HasMaxLength(40);

                    b.Property<string>("Observacao1")
                        .HasColumnName("OBS_1")
                        .HasMaxLength(25);

                    b.Property<string>("Observacao2")
                        .HasColumnName("OBS_2")
                        .HasMaxLength(25);

                    b.Property<int?>("QuantidadeFilhos")
                        .HasColumnName("QUT_FIL");

                    b.Property<string>("Rg")
                        .HasColumnName("REG_CLI")
                        .HasMaxLength(13);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("SalarioEmpresa")
                        .HasColumnName("SAL_EMP");

                    b.Property<string>("Spc")
                        .HasColumnName("CLI_SPC")
                        .HasMaxLength(1);

                    b.Property<string>("Telefone")
                        .HasColumnName("TEL_CLI")
                        .HasMaxLength(15);

                    b.Property<string>("TelefoneEmpresa")
                        .HasColumnName("TEL_EMP")
                        .HasMaxLength(15);

                    b.Property<string>("TipoCliente")
                        .HasColumnName("TIP_CLI")
                        .HasMaxLength(1);

                    b.Property<double?>("ValorCredito")
                        .HasColumnName("VAL_CRE");

                    b.Property<double?>("ValorUltimaCompra")
                        .HasColumnName("VAL_ULT");

                    b.HasKey("Codigo");

                    b.HasAlternateKey("RowId");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("cad_cli");
                });

            modelBuilder.Entity("IdxSistemas.Models.CondicaoPagamento", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4);

                    b.Property<string>("ComEntrada")
                        .IsRequired();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Intervalo");

                    b.Property<int>("Parcelas");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Codigo");

                    b.HasAlternateKey("RowId");

                    b.ToTable("CONDICAO_PAGAMENTO");
                });

            modelBuilder.Entity("IdxSistemas.Models.ContaBancaria", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COD_CON")
                        .HasMaxLength(4);

                    b.Property<string>("Conta")
                        .IsRequired()
                        .HasColumnName("NOM_CON")
                        .HasMaxLength(15);

                    b.Property<string>("Descricao")
                        .HasColumnName("DES_CON")
                        .HasMaxLength(20);

                    b.Property<string>("Loja")
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("NomeBanco")
                        .HasColumnName("NOM_BAN")
                        .HasMaxLength(15);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Saldo")
                        .HasColumnName("VAL_SAL");

                    b.Property<DateTime?>("UltimoLancamento")
                        .HasColumnName("ULT_LAN")
                        .HasColumnType("date");

                    b.HasKey("Codigo");

                    b.HasAlternateKey("RowId");

                    b.ToTable("cad_con");
                });

            modelBuilder.Entity("IdxSistemas.Models.ContaCorrente", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cheque")
                        .HasColumnName("NUM_CHE")
                        .HasMaxLength(6);

                    b.Property<string>("CodigoConta")
                        .IsRequired()
                        .HasColumnName("COD_CON")
                        .HasMaxLength(4);

                    b.Property<string>("CodigoFornecedor")
                        .HasColumnName("COD_FOR")
                        .HasMaxLength(4);

                    b.Property<DateTime>("Data")
                        .HasColumnName("DAT_LAN")
                        .HasColumnType("date");

                    b.Property<string>("DebitoCredito")
                        .IsRequired()
                        .HasColumnName("DEB_CRE")
                        .HasMaxLength(1);

                    b.Property<string>("Historico")
                        .HasColumnName("NOM_HIS")
                        .HasMaxLength(29);

                    b.Property<string>("NumeroDuplicata")
                        .HasColumnName("NUM_DUP")
                        .HasMaxLength(8);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<double?>("Valor")
                        .HasColumnName("VAL_LAN");

                    b.HasKey("RowId");

                    b.HasIndex("CodigoConta");

                    b.HasIndex("CodigoFornecedor");

                    b.ToTable("con_cor");
                });

            modelBuilder.Entity("IdxSistemas.Models.ContaPagar", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classificacao")
                        .HasColumnName("CLA_FIS")
                        .HasMaxLength(1);

                    b.Property<string>("CodigoConta")
                        .HasColumnName("COD_CON");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnName("DAT_EMI")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnName("DAT_PAG")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataRecebimento")
                        .HasColumnName("DAT_REC")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnName("DAT_VEN")
                        .HasColumnType("date");

                    b.Property<double?>("Desconto")
                        .HasColumnName("VAL_DES");

                    b.Property<string>("Duplicata")
                        .HasColumnName("NUM_DUP")
                        .HasMaxLength(8);

                    b.Property<string>("Fornecedor")
                        .HasColumnName("COD_FOR")
                        .HasMaxLength(4);

                    b.Property<string>("Historico")
                        .HasColumnName("HIS_DUP")
                        .HasMaxLength(30);

                    b.Property<double?>("Juros")
                        .HasColumnName("VAL_JUR");

                    b.Property<string>("Loja")
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("NotaFiscal")
                        .HasColumnName("NUM_NOT")
                        .HasMaxLength(8);

                    b.Property<string>("NumeroCheque")
                        .HasColumnName("NUM_CHE")
                        .HasMaxLength(6);

                    b.Property<string>("NumeroDocumento")
                        .HasColumnName("NUM_DOC")
                        .HasMaxLength(6);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<double?>("ValorDuplicata")
                        .HasColumnName("VAL_DUP");

                    b.Property<double?>("ValorPago")
                        .HasColumnName("VAL_PAG");

                    b.HasKey("RowId");

                    b.HasIndex("Fornecedor");

                    b.ToTable("con_pag");
                });

            modelBuilder.Entity("IdxSistemas.Models.ContaPagarTemp", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classificacao")
                        .HasColumnName("CLA_FIS")
                        .HasMaxLength(1);

                    b.Property<string>("CodigoConta")
                        .HasColumnName("COD_CON");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnName("DAT_EMI")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnName("DAT_PAG")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataRecebimento")
                        .HasColumnName("DAT_REC")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnName("DAT_VEN")
                        .HasColumnType("date");

                    b.Property<double?>("Desconto")
                        .HasColumnName("VAL_DES");

                    b.Property<string>("Duplicata")
                        .HasColumnName("NUM_DUP")
                        .HasMaxLength(8);

                    b.Property<string>("Fornecedor")
                        .HasColumnName("COD_FOR")
                        .HasMaxLength(4);

                    b.Property<string>("Historico")
                        .HasColumnName("HIS_DUP")
                        .HasMaxLength(30);

                    b.Property<double?>("Juros")
                        .HasColumnName("VAL_JUR");

                    b.Property<string>("Loja")
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("NotaFiscal")
                        .HasColumnName("NUM_NOT")
                        .HasMaxLength(8);

                    b.Property<string>("NumeroCheque")
                        .HasColumnName("NUM_CHE")
                        .HasMaxLength(6);

                    b.Property<string>("NumeroDocumento")
                        .HasColumnName("NUM_DOC")
                        .HasMaxLength(6);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<double?>("ValorDuplicata")
                        .HasColumnName("VAL_DUP");

                    b.Property<double?>("ValorPago")
                        .HasColumnName("VAL_PAG");

                    b.HasKey("RowId");

                    b.HasIndex("Fornecedor");

                    b.ToTable("tmp_con_pag");
                });

            modelBuilder.Entity("IdxSistemas.Models.ContaReceber", b =>
                {
                    b.Property<string>("NumeroDuplicata")
                        .HasColumnName("NUM_DUP")
                        .HasMaxLength(8);

                    b.Property<string>("Loja")
                        .HasColumnName("LOC_PAG")
                        .HasMaxLength(2);

                    b.Property<string>("Cliente")
                        .HasColumnName("COD_CLI")
                        .HasMaxLength(5);

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnName("DAT_EMI")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnName("DAT_VEN")
                        .HasColumnType("DATE");

                    b.Property<double?>("Desconto")
                        .HasColumnName("VAL_DES");

                    b.Property<string>("FlagEntrada")
                        .HasColumnName("FLA_ENT")
                        .HasMaxLength(1);

                    b.Property<short?>("FlagPgto")
                        .HasColumnName("FLA_PAG");

                    b.Property<double?>("Juros")
                        .HasColumnName("VAL_JUR");

                    b.Property<string>("NumeroCI")
                        .HasColumnName("NUM__CI")
                        .HasMaxLength(6);

                    b.Property<string>("NumeroDocumento")
                        .HasColumnName("NUM_DOC")
                        .HasMaxLength(6);

                    b.Property<string>("NumeroFatura")
                        .HasColumnName("NUM_FAT")
                        .HasMaxLength(6);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoVenda")
                        .HasColumnName("TIP_DUP")
                        .HasMaxLength(1);

                    b.Property<double?>("ValorDuplicata")
                        .HasColumnName("VAL_DUP");

                    b.Property<double?>("ValorFatura")
                        .HasColumnName("VAL_FAT");

                    b.Property<double?>("ValorTotal")
                        .HasColumnName("VAL_TOT");

                    b.Property<string>("Vendedor")
                        .HasColumnName("COD_VEN")
                        .HasMaxLength(2);

                    b.HasKey("NumeroDuplicata", "Loja");

                    b.HasAlternateKey("RowId");

                    b.HasIndex("Cliente");

                    b.ToTable("con_rec");
                });

            modelBuilder.Entity("IdxSistemas.Models.ContaReceberTemp", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnName("COD_CLI")
                        .HasMaxLength(5);

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnName("DAT_EMI")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnName("DAT_VEN")
                        .HasColumnType("DATE");

                    b.Property<double?>("Desconto")
                        .HasColumnName("VAL_DES");

                    b.Property<string>("FlagEntrada")
                        .HasColumnName("FLA_ENT")
                        .HasMaxLength(1);

                    b.Property<short?>("FlagPgto")
                        .HasColumnName("FLA_PAG");

                    b.Property<double?>("Juros")
                        .HasColumnName("VAL_JUR");

                    b.Property<string>("Loja")
                        .IsRequired()
                        .HasColumnName("LOC_PAG")
                        .HasMaxLength(2);

                    b.Property<string>("NumeroCI")
                        .HasColumnName("NUM__CI")
                        .HasMaxLength(6);

                    b.Property<string>("NumeroDocumento")
                        .HasColumnName("NUM_DOC")
                        .HasMaxLength(6);

                    b.Property<string>("NumeroDuplicata")
                        .HasColumnName("NUM_DUP")
                        .HasMaxLength(8);

                    b.Property<string>("NumeroFatura")
                        .HasColumnName("NUM_FAT")
                        .HasMaxLength(6);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<string>("TipoVenda")
                        .HasColumnName("TIP_DUP")
                        .HasMaxLength(1);

                    b.Property<double?>("ValorDuplicata")
                        .HasColumnName("VAL_DUP");

                    b.Property<double?>("ValorFatura")
                        .HasColumnName("VAL_FAT");

                    b.Property<double?>("ValorTotal")
                        .HasColumnName("VAL_TOT");

                    b.Property<string>("Vendedor")
                        .HasColumnName("COD_VEN")
                        .HasMaxLength(2);

                    b.HasKey("RowId");

                    b.HasIndex("Cliente");

                    b.ToTable("tmp_con_rec");
                });

            modelBuilder.Entity("IdxSistemas.Models.Despesa", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("COD_DES")
                        .HasMaxLength(2);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("NOM_DES")
                        .HasMaxLength(15);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.HasKey("RowId");

                    b.ToTable("cad_des");
                });

            modelBuilder.Entity("IdxSistemas.Models.DocumentoEntrada", b =>
                {
                    b.Property<string>("Numero")
                        .HasColumnName("NUM_NOT")
                        .HasMaxLength(8);

                    b.Property<string>("Fornecedor")
                        .HasColumnName("COD_FOR");

                    b.Property<double?>("BaseCalculo")
                        .HasColumnName("BAS_CAL");

                    b.Property<string>("Classificacao")
                        .HasColumnName("STA_COM");

                    b.Property<string>("ClassificacaoFiscal")
                        .HasColumnName("CLA_FIS")
                        .HasMaxLength(3);

                    b.Property<string>("Condicao")
                        .HasColumnName("CONDICAO_PAGAMENTO");

                    b.Property<string>("CondicaoPagamentoInfo")
                        .HasColumnName("CON_PAG")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnName("DAT_COM")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataRecebimento")
                        .HasColumnName("DAT_ENT")
                        .HasColumnType("date");

                    b.Property<string>("Loja")
                        .IsRequired()
                        .HasColumnName("COD_LOC");

                    b.Property<string>("NaturezaOperacao")
                        .HasColumnName("NAT_OPE")
                        .HasMaxLength(3);

                    b.Property<string>("NumeroDuplicata")
                        .HasColumnName("NUM_DUP")
                        .HasMaxLength(6);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Serie")
                        .HasColumnName("NUM_SER")
                        .HasMaxLength(3);

                    b.Property<double?>("ValorICMS")
                        .HasColumnName("VAL_ICM");

                    b.Property<double?>("ValorIPI")
                        .HasColumnName("VAL_IPI");

                    b.Property<double?>("ValorTotal")
                        .HasColumnName("VAL_TOT");

                    b.HasKey("Numero", "Fornecedor");

                    b.HasAlternateKey("RowId");

                    b.HasIndex("Condicao");

                    b.HasIndex("Fornecedor");

                    b.ToTable("cad_com");
                });

            modelBuilder.Entity("IdxSistemas.Models.DocumentoEntradaItem", b =>
                {
                    b.Property<string>("DocumentoEntradaNumero")
                        .HasColumnName("NUM_NOT")
                        .HasMaxLength(8);

                    b.Property<string>("Fornecedor")
                        .HasColumnName("COD_FOR");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classificacao")
                        .HasColumnName("CLA");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("COD_ITE")
                        .HasMaxLength(14);

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnName("DAT_ENT")
                        .HasColumnType("date");

                    b.Property<string>("EntradaAntecipada")
                        .HasColumnName("ENT_ANT")
                        .HasMaxLength(1);

                    b.Property<string>("Loja")
                        .IsRequired()
                        .HasColumnName("COD_LOC");

                    b.Property<int>("Quantidade")
                        .HasColumnName("QUT_ITE");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<double>("ValorUnitario")
                        .HasColumnName("VAL_UNI");

                    b.HasKey("DocumentoEntradaNumero", "Fornecedor", "RowId");

                    b.HasAlternateKey("RowId");

                    b.HasIndex("Codigo");

                    b.ToTable("ite_com");
                });

            modelBuilder.Entity("IdxSistemas.Models.DocumentoRecebimento", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Data")
                        .HasColumnName("DAT_PAG")
                        .HasColumnType("date");

                    b.Property<string>("Loja")
                        .HasColumnName("LOC_PAG");

                    b.Property<string>("Numero")
                        .HasColumnName("NUM_DOC");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.HasKey("RowId");

                    b.ToTable("pag_doc");
                });

            modelBuilder.Entity("IdxSistemas.Models.EntradaAntecipada", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassificacaoFiscal")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("DataEntrada")
                        .HasColumnType("date");

                    b.Property<string>("DescricaoEtiqueta1")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("DescricaoEtiqueta2")
                        .HasMaxLength(20);

                    b.Property<string>("DescricaoProduto")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Fornecedor")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("Loja")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("NotaFiscal")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<double?>("PrecoCusto");

                    b.Property<double?>("PrecoPrazo");

                    b.Property<double?>("PrecoVista");

                    b.Property<string>("Produto")
                        .IsRequired()
                        .HasMaxLength(14);

                    b.Property<string>("ProdutoPrincipal")
                        .HasMaxLength(14);

                    b.Property<int?>("Quantidade");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<string>("Secao")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.HasKey("RowId");

                    b.HasIndex("Fornecedor");

                    b.HasIndex("Produto");

                    b.ToTable("ENTRADA_ANTECIPADA");
                });

            modelBuilder.Entity("IdxSistemas.Models.FechamentoCaixa", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnName("DAT");

                    b.Property<string>("Loja")
                        .HasColumnName("LOJ");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<double?>("ValorAcrescimo")
                        .HasColumnName("ACR");

                    b.Property<double?>("ValorCheque")
                        .HasColumnName("CHE");

                    b.Property<double?>("ValorCrediario")
                        .HasColumnName("CRE");

                    b.Property<double?>("ValorDesconto")
                        .HasColumnName("DSC");

                    b.Property<double?>("ValorDespesa")
                        .HasColumnName("DSP");

                    b.Property<double?>("ValorEntrada")
                        .HasColumnName("ENT");

                    b.Property<double?>("ValorJuros")
                        .HasColumnName("JUR");

                    b.Property<double?>("ValorPrazo")
                        .HasColumnName("PRA");

                    b.Property<double?>("ValorVista")
                        .HasColumnName("VIS");

                    b.HasKey("RowId");

                    b.HasIndex("Data");

                    b.ToTable("arq_cai");
                });

            modelBuilder.Entity("IdxSistemas.Models.Fornecedor", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COD_FOR")
                        .HasMaxLength(4);

                    b.Property<string>("Bairro")
                        .HasColumnName("BAI_FOR")
                        .HasMaxLength(15);

                    b.Property<string>("BairroRep")
                        .HasColumnName("BAI_REP")
                        .HasMaxLength(15);

                    b.Property<string>("Cep")
                        .HasColumnName("CEP_FOR")
                        .HasMaxLength(9);

                    b.Property<string>("CepRep")
                        .HasColumnName("CEP_REP")
                        .HasMaxLength(9);

                    b.Property<string>("Cidade")
                        .HasColumnName("CID_FOR")
                        .HasMaxLength(20);

                    b.Property<string>("CidadeRep")
                        .HasColumnName("CID_REP")
                        .HasMaxLength(20);

                    b.Property<string>("Cnpj")
                        .HasColumnName("CGC_FOR")
                        .HasMaxLength(18);

                    b.Property<string>("CondicaoComercial")
                        .HasColumnName("CON_COM")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnName("DAT_CAD")
                        .HasColumnType("date");

                    b.Property<string>("DescontoComercial")
                        .HasColumnName("DES_COM")
                        .HasMaxLength(30);

                    b.Property<string>("Endereco")
                        .HasColumnName("END_FOR")
                        .HasMaxLength(40);

                    b.Property<string>("EnderecoRep")
                        .HasColumnName("END_REP")
                        .HasMaxLength(40);

                    b.Property<string>("Estado")
                        .HasColumnName("EST_FOR")
                        .HasMaxLength(2);

                    b.Property<string>("EstadoRep")
                        .HasColumnName("EST_REP")
                        .HasMaxLength(2);

                    b.Property<string>("Fax")
                        .HasColumnName("FAX_FOR")
                        .HasMaxLength(15);

                    b.Property<string>("FaxRep")
                        .HasColumnName("FAX_REP")
                        .HasMaxLength(15);

                    b.Property<string>("Inscricao")
                        .HasColumnName("INS_FOR")
                        .HasMaxLength(15);

                    b.Property<string>("NomeRep")
                        .HasColumnName("NOM_REP")
                        .HasMaxLength(30);

                    b.Property<string>("Observacao1")
                        .HasColumnName("OBS_001")
                        .HasMaxLength(30);

                    b.Property<string>("Observacao2")
                        .HasColumnName("OBS_002")
                        .HasMaxLength(30);

                    b.Property<string>("RazaoSocial")
                        .HasColumnName("RAZ_SOC")
                        .HasMaxLength(30);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Telefone")
                        .HasColumnName("TEL_FOR")
                        .HasMaxLength(15);

                    b.Property<string>("TelefoneRep")
                        .HasColumnName("TEL_REP")
                        .HasMaxLength(15);

                    b.HasKey("Codigo");

                    b.HasAlternateKey("RowId");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("cad_for");
                });

            modelBuilder.Entity("IdxSistemas.Models.Funcionario", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnName("BAI_CLI")
                        .HasMaxLength(18);

                    b.Property<string>("Cargo")
                        .HasColumnName("CAR_CLI")
                        .HasMaxLength(15);

                    b.Property<string>("Cep")
                        .HasColumnName("CEP_CLI")
                        .HasMaxLength(8);

                    b.Property<string>("Cidade")
                        .HasColumnName("CID_CLI")
                        .HasMaxLength(20);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("COD_CLI")
                        .HasMaxLength(5);

                    b.Property<string>("Cpf")
                        .HasColumnName("CIC_CLI")
                        .HasMaxLength(15);

                    b.Property<string>("Ctps")
                        .HasColumnName("CRP_CLI")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("DataAdmissao")
                        .HasColumnName("DAT_CAD")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnName("DAT_NAS")
                        .HasColumnType("date");

                    b.Property<string>("Endereco")
                        .HasColumnName("END_CLI")
                        .HasMaxLength(40);

                    b.Property<string>("Estado")
                        .HasColumnName("EST_CLI")
                        .HasMaxLength(2);

                    b.Property<string>("Loja")
                        .IsRequired()
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOM_CLI")
                        .HasMaxLength(40);

                    b.Property<string>("Rg")
                        .HasColumnName("REG_CLI")
                        .HasMaxLength(13);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<double?>("Salario")
                        .HasColumnName("VAL_SAL");

                    b.Property<string>("Telefone")
                        .HasColumnName("TEL_CLI")
                        .HasMaxLength(15);

                    b.HasKey("RowId");

                    b.ToTable("cad_fun");
                });

            modelBuilder.Entity("IdxSistemas.Models.Historico", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("COD_HIS")
                        .HasMaxLength(2);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOM_HIS")
                        .HasMaxLength(20);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.HasKey("RowId");

                    b.ToTable("cad_his");
                });

            modelBuilder.Entity("IdxSistemas.Models.HistoricoCliente", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cliente");

                    b.Property<DateTime?>("DataEmissao");

                    b.Property<DateTime?>("DataPagamento");

                    b.Property<DateTime>("DataVencimento");

                    b.Property<string>("Loja");

                    b.Property<string>("NumeroDocumento");

                    b.Property<string>("NumeroDuplicata");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<string>("TipoVenda");

                    b.Property<double?>("ValorDuplicata");

                    b.Property<double?>("ValorPago");

                    b.HasKey("RowId");

                    b.ToTable("TMP_HISTORICO_CLIENTE");
                });

            modelBuilder.Entity("IdxSistemas.Models.Loja", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("MovimentaEstoque")
                        .HasColumnName("MOV_EST")
                        .HasMaxLength(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOM_LOC")
                        .HasMaxLength(15);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Codigo");

                    b.HasAlternateKey("RowId");

                    b.ToTable("cad_loc");
                });

            modelBuilder.Entity("IdxSistemas.Models.Marca", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("COD_MAR")
                        .HasMaxLength(3);

                    b.Property<string>("Nome")
                        .HasColumnName("NOM_MAR")
                        .HasMaxLength(15);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.HasKey("RowId");

                    b.ToTable("cad_mar");
                });

            modelBuilder.Entity("IdxSistemas.Models.Modulo", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Sequencia")
                        .HasMaxLength(3);

                    b.Property<string>("UsuarioFuncaoId")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Codigo");

                    b.HasIndex("UsuarioFuncaoId");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("IdxSistemas.Models.ModuloAplicativo", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AplicativoCodigo")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("ModuloCodigo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.HasKey("RowId");

                    b.HasIndex("AplicativoCodigo");

                    b.HasIndex("ModuloCodigo");

                    b.ToTable("ModuloAplicativos");
                });

            modelBuilder.Entity("IdxSistemas.Models.MovimentoCaixa", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnName("DAT_LAN")
                        .HasColumnType("date");

                    b.Property<string>("Historico")
                        .HasColumnName("NOM_HIS");

                    b.Property<string>("Loja")
                        .HasColumnName("COD_LOC");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<double>("Valor")
                        .HasColumnName("VAL_LAN");

                    b.HasKey("RowId");

                    b.HasIndex("Loja");

                    b.ToTable("mov_cai");
                });

            modelBuilder.Entity("IdxSistemas.Models.MovimentoEstoque", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoItem")
                        .IsRequired()
                        .HasColumnName("COD_ITE")
                        .HasMaxLength(14);

                    b.Property<string>("CodigoTransferencia")
                        .IsRequired()
                        .HasColumnName("COD_TRA")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("DataMovimento")
                        .IsRequired()
                        .HasColumnName("DAT_MOV")
                        .HasColumnType("date");

                    b.Property<string>("Historico")
                        .HasColumnName("HIS_MOV")
                        .HasMaxLength(20);

                    b.Property<string>("LocalEstoqueEntrada")
                        .HasColumnName("LOC_ENT")
                        .HasMaxLength(2);

                    b.Property<string>("LocalEstoqueSaida")
                        .HasColumnName("LOC_SAI")
                        .HasMaxLength(2);

                    b.Property<string>("NumeroDocumento")
                        .HasColumnName("NUM_DOC")
                        .HasMaxLength(10);

                    b.Property<int>("QuantidadeAtual")
                        .HasColumnName("QUT_ATU");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.HasKey("RowId");

                    b.ToTable("arq_mov");
                });

            modelBuilder.Entity("IdxSistemas.Models.Operadora", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Admin")
                        .HasColumnName("COD_CLI");

                    b.Property<string>("Descricao")
                        .HasColumnName("DES_OPR")
                        .HasMaxLength(50);

                    b.Property<string>("FlagStatus")
                        .HasColumnName("FLG_STA")
                        .HasMaxLength(1);

                    b.Property<int>("ParcelaFinal")
                        .HasColumnName("PAR_FIN");

                    b.Property<int>("ParcelaInicial")
                        .HasColumnName("PAR_INI");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<double?>("Taxa")
                        .HasColumnName("TAX_OPR");

                    b.Property<int>("TipoVencimento")
                        .HasColumnName("TIP_VEN");

                    b.HasKey("RowId");

                    b.HasIndex("Admin");

                    b.ToTable("cad_opr");
                });

            modelBuilder.Entity("IdxSistemas.Models.Parametro", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("DES_PAR");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<string>("Valor")
                        .HasColumnName("VAL_PAR");

                    b.Property<string>("Variavel")
                        .HasColumnName("VARIAVEL");

                    b.HasKey("RowId");

                    b.ToTable("par_met");
                });

            modelBuilder.Entity("IdxSistemas.Models.PedidoVenda", b =>
                {
                    b.Property<string>("Numero")
                        .HasColumnName("NUM_VEN")
                        .HasMaxLength(6);

                    b.Property<string>("Loja")
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("Cliente")
                        .HasColumnName("COD_CLI")
                        .HasMaxLength(5);

                    b.Property<DateTime?>("Data")
                        .HasColumnName("DAT_VEN")
                        .HasColumnType("date");

                    b.Property<string>("Faturado")
                        .HasColumnName("NOT_FAT")
                        .HasMaxLength(1);

                    b.Property<string>("FlagEntrada")
                        .HasColumnName("FLA_ENT");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnName("NUM_DOC");

                    b.Property<long?>("OperadoraId")
                        .HasColumnName("COD_CAR");

                    b.Property<int?>("Parcelas")
                        .HasColumnName("NUM_PAR");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoVenda")
                        .HasColumnName("TIP_VEN");

                    b.Property<double?>("ValorAcrescimo")
                        .HasColumnName("VAL_ACR");

                    b.Property<double?>("ValorDesconto")
                        .HasColumnName("VAL_DES");

                    b.Property<double?>("ValorEntrada")
                        .HasColumnName("VAL_ENT");

                    b.Property<double?>("ValorVenda")
                        .HasColumnName("VAL_VEN");

                    b.HasKey("Numero", "Loja");

                    b.HasAlternateKey("RowId");

                    b.HasIndex("Cliente");

                    b.HasIndex("OperadoraId");

                    b.ToTable("cad_not");
                });

            modelBuilder.Entity("IdxSistemas.Models.PedidoVendaItem", b =>
                {
                    b.Property<string>("NumeroVenda")
                        .HasColumnName("NUM_VEN");

                    b.Property<string>("Loja")
                        .HasColumnName("COD_LOC");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("COD_ITE");

                    b.Property<string>("NumeroPreVenda")
                        .HasColumnName("NUM_CTL")
                        .HasMaxLength(6);

                    b.Property<int?>("Quantidade")
                        .HasColumnName("QUT_ITE");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<string>("Secao")
                        .HasColumnName("COD_SEC");

                    b.Property<string>("Troca")
                        .HasColumnName("TRO_CA");

                    b.Property<double?>("ValorAcrescimo")
                        .HasColumnName("VAL_ACR");

                    b.Property<double?>("ValorDesconto")
                        .HasColumnName("VAL_DES");

                    b.Property<double?>("ValorUnitario")
                        .HasColumnName("VAL_UNI");

                    b.Property<string>("Vendedor")
                        .HasColumnName("COD_VEN");

                    b.HasKey("NumeroVenda", "Loja", "RowId");

                    b.HasAlternateKey("RowId");

                    b.HasIndex("Codigo");

                    b.HasIndex("Vendedor");

                    b.ToTable("ite_not");
                });

            modelBuilder.Entity("IdxSistemas.Models.Pergunta", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("Componente")
                        .HasMaxLength(50);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Inativo")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("Lista")
                        .HasMaxLength(150);

                    b.Property<string>("Obrigatorio")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("Ordem")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("Parametro")
                        .HasMaxLength(50);

                    b.Property<string>("Resposta")
                        .HasMaxLength(50);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ValueHelp")
                        .HasMaxLength(150);

                    b.HasKey("RowId");

                    b.ToTable("PERGUNTAS");
                });

            modelBuilder.Entity("IdxSistemas.Models.PreVenda", b =>
                {
                    b.Property<string>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NUM_VEN")
                        .HasMaxLength(6);

                    b.Property<string>("Cliente")
                        .HasColumnName("COD_CLI")
                        .HasMaxLength(5);

                    b.Property<DateTime?>("Data")
                        .HasColumnName("DAT_VEN")
                        .HasColumnType("date");

                    b.Property<string>("Finalizado")
                        .HasColumnName("FLG_FIN");

                    b.Property<string>("FlagCondicional")
                        .HasColumnName("FLG_CON");

                    b.Property<string>("FlagEntrada")
                        .HasColumnName("FLA_ENT");

                    b.Property<string>("Loja")
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("NumeroDocumento")
                        .HasColumnName("NUM_DOC");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("ValorAcrescimo")
                        .HasColumnName("VAL_ACR");

                    b.Property<double?>("ValorDesconto")
                        .HasColumnName("VAL_DES");

                    b.Property<double?>("ValorVenda")
                        .HasColumnName("VAL_VEN");

                    b.Property<string>("Vendedor")
                        .HasColumnName("COD_VE1")
                        .HasMaxLength(2);

                    b.HasKey("Numero");

                    b.HasAlternateKey("RowId");

                    b.HasIndex("Cliente");

                    b.HasIndex("Vendedor");

                    b.ToTable("cad_ctl");
                });

            modelBuilder.Entity("IdxSistemas.Models.PreVendaItem", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Acrescimo")
                        .HasColumnName("VAL_ACR");

                    b.Property<string>("Codigo")
                        .HasColumnName("COD_ITE");

                    b.Property<double?>("Desconto")
                        .HasColumnName("VAL_DES");

                    b.Property<string>("Loja")
                        .HasColumnName("COD_LOC");

                    b.Property<string>("Numero")
                        .HasColumnName("NUM_VEN");

                    b.Property<int?>("Quantidade")
                        .HasColumnName("QUT_ITE");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<double?>("ValorUnitario")
                        .HasColumnName("VAL_UNI");

                    b.HasKey("RowId");

                    b.HasIndex("Numero");

                    b.ToTable("ite_ctl");
                });

            modelBuilder.Entity("IdxSistemas.Models.Produto", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COD_ITE")
                        .HasMaxLength(14);

                    b.Property<int?>("CompraMes")
                        .HasColumnName("COM_MES");

                    b.Property<int?>("ConsumoMedio")
                        .HasColumnName("CON_MED");

                    b.Property<double?>("CustoMedio")
                        .HasColumnName("CUS_MED");

                    b.Property<string>("Descricao")
                        .HasColumnName("DES_ITE")
                        .HasMaxLength(30);

                    b.Property<string>("DescricaoEtiqueta1")
                        .HasColumnName("DES_CD1")
                        .HasMaxLength(18);

                    b.Property<string>("DescricaoEtiqueta2")
                        .HasColumnName("DES_CD2")
                        .HasMaxLength(18);

                    b.Property<string>("Fornecedor")
                        .HasColumnName("ULT_FOR")
                        .HasMaxLength(4);

                    b.Property<string>("ItemPrincipal")
                        .HasColumnName("ITE_PRI")
                        .HasMaxLength(14);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Secao")
                        .HasColumnName("COD_SEC")
                        .HasMaxLength(2);

                    b.Property<string>("Status")
                        .HasColumnName("STA_ITE")
                        .HasMaxLength(1);

                    b.Property<string>("Tabela")
                        .HasColumnName("COD_TAB")
                        .HasMaxLength(4);

                    b.Property<int?>("TransferenciaMes")
                        .HasColumnName("TRA_MES");

                    b.Property<DateTime?>("UltimaCompra")
                        .HasColumnName("ULT_COM")
                        .HasColumnType("date");

                    b.Property<string>("Unidade")
                        .HasColumnName("UNI_ITE")
                        .HasMaxLength(2);

                    b.Property<double?>("ValorCusto")
                        .HasColumnName("VAL_CUS");

                    b.Property<double?>("ValorPrazo")
                        .HasColumnName("VAL_002");

                    b.Property<double?>("ValorPromocao")
                        .HasColumnName("VAL_PRO");

                    b.Property<double?>("ValorVista")
                        .HasColumnName("VAL_001");

                    b.Property<int?>("VendaMes")
                        .HasColumnName("VEN_MES");

                    b.HasKey("Codigo");

                    b.HasAlternateKey("RowId");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("cad_ite");
                });

            modelBuilder.Entity("IdxSistemas.Models.RecebimentoConta", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnName("DAT_PAG")
                        .HasColumnType("date");

                    b.Property<string>("Loja")
                        .HasColumnName("COD_LOC");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnName("NUM_DOC");

                    b.Property<string>("NumeroDuplicata")
                        .HasColumnName("NUM_DUP");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<double?>("ValorDesconto")
                        .HasColumnName("VAL_DES");

                    b.Property<double?>("ValorJuros")
                        .HasColumnName("VAL_JUR");

                    b.Property<double?>("ValorPago")
                        .HasColumnName("VAL_PAG");

                    b.HasKey("RowId");

                    b.HasIndex("NumeroDuplicata", "Loja");

                    b.ToTable("fil_rec");
                });

            modelBuilder.Entity("IdxSistemas.Models.Relatorios", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Descricao");

                    b.Property<string>("Executar");

                    b.Property<string>("Link");

                    b.Property<string>("Modulo");

                    b.Property<string>("Nome");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.HasKey("RowId");

                    b.ToTable("RELATORIOS");
                });

            modelBuilder.Entity("IdxSistemas.Models.SaldoEstoque", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("COD_ITE")
                        .HasMaxLength(14);

                    b.Property<string>("Loja")
                        .IsRequired()
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<int?>("SaldoAtual")
                        .HasColumnName("EST_ATU");

                    b.HasKey("RowId");

                    b.HasIndex("Loja");

                    b.ToTable("loc_ite");
                });

            modelBuilder.Entity("IdxSistemas.Models.Secao", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("COD_SEC")
                        .HasMaxLength(2);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOM_SEC")
                        .HasMaxLength(15);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.HasKey("RowId");

                    b.ToTable("cad_sec");
                });

            modelBuilder.Entity("IdxSistemas.Models.Tabela", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("COD_TAB")
                        .HasMaxLength(4);

                    b.Property<DateTime?>("Data")
                        .HasColumnName("DAT_TAB")
                        .HasColumnType("date");

                    b.Property<double?>("Margem")
                        .HasColumnName("MAR_GEM");

                    b.Property<string>("Nome")
                        .HasColumnName("NOM_TAB")
                        .HasMaxLength(30);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<DateTime?>("UltimaAlteracao")
                        .HasColumnName("ULT_ALT")
                        .HasColumnType("date");

                    b.HasKey("RowId");

                    b.ToTable("cad_tab");
                });

            modelBuilder.Entity("IdxSistemas.Models.Tipo", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("COD_ORD")
                        .HasMaxLength(3);

                    b.Property<string>("Nome")
                        .HasColumnName("NOM_ORD")
                        .HasMaxLength(15);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.HasKey("RowId");

                    b.ToTable("cad_ord");
                });

            modelBuilder.Entity("IdxSistemas.Models.Usuario", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOM_USR")
                        .HasMaxLength(10);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("SEN_USR")
                        .HasMaxLength(10);

                    b.Property<string>("UsuarioFuncaoId")
                        .HasColumnName("FUNCAO_ID")
                        .HasMaxLength(15);

                    b.HasKey("RowId");

                    b.HasIndex("UsuarioFuncaoId");

                    b.ToTable("cad_ace");
                });

            modelBuilder.Entity("IdxSistemas.Models.UsuarioFuncao", b =>
                {
                    b.Property<string>("FuncaoId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.HasKey("FuncaoId");

                    b.ToTable("UsuarioFuncao");
                });

            modelBuilder.Entity("IdxSistemas.Models.VendaSecao", b =>
                {
                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Loja")
                        .HasColumnName("COD_LOC");

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<string>("Secao")
                        .HasColumnName("COD_SEC");

                    b.Property<double?>("ValorEntrada")
                        .HasColumnName("VAL_ENT");

                    b.Property<double?>("ValorPrazo")
                        .HasColumnName("VAL_PRA");

                    b.Property<double?>("ValorVista")
                        .HasColumnName("VAL_VIS");

                    b.HasKey("RowId");

                    b.ToTable("arq_vxx");
                });

            modelBuilder.Entity("IdxSistemas.Models.Vendedor", b =>
                {
                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COD_VEN")
                        .HasMaxLength(2);

                    b.Property<double?>("Adiantamento")
                        .HasColumnName("VAL_ADI");

                    b.Property<double?>("Comissao")
                        .HasColumnName("TAX_COM");

                    b.Property<double?>("CotaVenda")
                        .HasColumnName("VAL_COT");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnName("DAT_CAD")
                        .HasColumnType("date");

                    b.Property<string>("Loja")
                        .IsRequired()
                        .HasColumnName("COD_LOC")
                        .HasMaxLength(2);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOM_VEN")
                        .HasMaxLength(20);

                    b.Property<string>("RowDeleted")
                        .HasColumnName("sql_deleted");

                    b.Property<long>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sql_rowid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Secao1")
                        .HasColumnName("COD_SE1")
                        .HasMaxLength(2);

                    b.Property<string>("Secao2")
                        .HasColumnName("COD_SE2")
                        .HasMaxLength(2);

                    b.Property<string>("Secao3")
                        .HasColumnName("COD_SE3")
                        .HasMaxLength(2);

                    b.Property<string>("Secao4")
                        .HasColumnName("COD_SE4")
                        .HasMaxLength(4);

                    b.Property<string>("Secao5")
                        .HasColumnName("COD_SE5")
                        .HasMaxLength(2);

                    b.Property<string>("Secao6")
                        .HasColumnName("COD_SE6")
                        .HasMaxLength(2);

                    b.Property<double?>("ValorFixo")
                        .HasColumnName("VAL_FIX");

                    b.Property<double?>("ValorPrazo")
                        .HasColumnName("PRAZO");

                    b.Property<double?>("ValorVista")
                        .HasColumnName("VISTA");

                    b.HasKey("Codigo");

                    b.HasAlternateKey("RowId");

                    b.ToTable("cad_ven");
                });

            modelBuilder.Entity("IdxSistemas.Models.Cancelada", b =>
                {
                    b.HasOne("IdxSistemas.Models.Loja", "Lojas")
                        .WithMany()
                        .HasForeignKey("Loja");
                });

            modelBuilder.Entity("IdxSistemas.Models.Cheque", b =>
                {
                    b.HasOne("IdxSistemas.Models.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("Cliente");

                    b.HasOne("IdxSistemas.Models.Loja", "Lojas")
                        .WithMany()
                        .HasForeignKey("Loja")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdxSistemas.Models.ContaCorrente", b =>
                {
                    b.HasOne("IdxSistemas.Models.ContaBancaria", "ContaBancaria")
                        .WithMany()
                        .HasForeignKey("CodigoConta")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IdxSistemas.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("CodigoFornecedor");
                });

            modelBuilder.Entity("IdxSistemas.Models.ContaPagar", b =>
                {
                    b.HasOne("IdxSistemas.Models.Fornecedor", "Fornecedores")
                        .WithMany()
                        .HasForeignKey("Fornecedor");
                });

            modelBuilder.Entity("IdxSistemas.Models.ContaPagarTemp", b =>
                {
                    b.HasOne("IdxSistemas.Models.Fornecedor", "Fornecedores")
                        .WithMany()
                        .HasForeignKey("Fornecedor");
                });

            modelBuilder.Entity("IdxSistemas.Models.ContaReceber", b =>
                {
                    b.HasOne("IdxSistemas.Models.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("Cliente");
                });

            modelBuilder.Entity("IdxSistemas.Models.ContaReceberTemp", b =>
                {
                    b.HasOne("IdxSistemas.Models.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("Cliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdxSistemas.Models.DocumentoEntrada", b =>
                {
                    b.HasOne("IdxSistemas.Models.CondicaoPagamento", "CondicaoPagamento")
                        .WithMany()
                        .HasForeignKey("Condicao");

                    b.HasOne("IdxSistemas.Models.Fornecedor", "Fornecedores")
                        .WithMany("NotaFiscal")
                        .HasForeignKey("Fornecedor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdxSistemas.Models.DocumentoEntradaItem", b =>
                {
                    b.HasOne("IdxSistemas.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("Codigo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IdxSistemas.Models.DocumentoEntrada", "DocumentoEntrada")
                        .WithMany("DocumentoEntradaItems")
                        .HasForeignKey("DocumentoEntradaNumero", "Fornecedor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdxSistemas.Models.EntradaAntecipada", b =>
                {
                    b.HasOne("IdxSistemas.Models.Fornecedor", "Fornecedores")
                        .WithMany()
                        .HasForeignKey("Fornecedor")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IdxSistemas.Models.Produto", "Produtos")
                        .WithMany()
                        .HasForeignKey("Produto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdxSistemas.Models.Modulo", b =>
                {
                    b.HasOne("IdxSistemas.Models.UsuarioFuncao", "UsuarioFuncao")
                        .WithMany()
                        .HasForeignKey("UsuarioFuncaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdxSistemas.Models.ModuloAplicativo", b =>
                {
                    b.HasOne("IdxSistemas.Models.Aplicativo", "Aplicativo")
                        .WithMany()
                        .HasForeignKey("AplicativoCodigo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IdxSistemas.Models.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloCodigo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdxSistemas.Models.MovimentoCaixa", b =>
                {
                    b.HasOne("IdxSistemas.Models.Loja", "Lojas")
                        .WithMany()
                        .HasForeignKey("Loja");
                });

            modelBuilder.Entity("IdxSistemas.Models.Operadora", b =>
                {
                    b.HasOne("IdxSistemas.Models.Cliente", "Administrador")
                        .WithMany("PlanoCartao")
                        .HasForeignKey("Admin");
                });

            modelBuilder.Entity("IdxSistemas.Models.PedidoVenda", b =>
                {
                    b.HasOne("IdxSistemas.Models.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("Cliente");

                    b.HasOne("IdxSistemas.Models.Operadora", "Operadora")
                        .WithMany()
                        .HasForeignKey("OperadoraId");
                });

            modelBuilder.Entity("IdxSistemas.Models.PedidoVendaItem", b =>
                {
                    b.HasOne("IdxSistemas.Models.Produto", "Produtos")
                        .WithMany()
                        .HasForeignKey("Codigo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IdxSistemas.Models.Vendedor", "Vendedores")
                        .WithMany()
                        .HasForeignKey("Vendedor");

                    b.HasOne("IdxSistemas.Models.PedidoVenda", "PedidoVenda")
                        .WithMany("PedidoVendaItems")
                        .HasForeignKey("NumeroVenda", "Loja")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdxSistemas.Models.PreVenda", b =>
                {
                    b.HasOne("IdxSistemas.Models.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("Cliente");

                    b.HasOne("IdxSistemas.Models.Vendedor", "Vendedores")
                        .WithMany()
                        .HasForeignKey("Vendedor");
                });

            modelBuilder.Entity("IdxSistemas.Models.PreVendaItem", b =>
                {
                    b.HasOne("IdxSistemas.Models.PreVenda", "PreVenda")
                        .WithMany()
                        .HasForeignKey("Numero");
                });

            modelBuilder.Entity("IdxSistemas.Models.RecebimentoConta", b =>
                {
                    b.HasOne("IdxSistemas.Models.ContaReceber", "ContaReceber")
                        .WithMany()
                        .HasForeignKey("NumeroDuplicata", "Loja");
                });

            modelBuilder.Entity("IdxSistemas.Models.SaldoEstoque", b =>
                {
                    b.HasOne("IdxSistemas.Models.Loja", "Lojas")
                        .WithMany()
                        .HasForeignKey("Loja")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IdxSistemas.Models.Usuario", b =>
                {
                    b.HasOne("IdxSistemas.Models.UsuarioFuncao", "UsuarioFuncao")
                        .WithMany()
                        .HasForeignKey("UsuarioFuncaoId");
                });
#pragma warning restore 612, 618
        }
    }
}
